{% macro navbar() %}
<nav class="navbar navbar-expand-lg navbar-custom">
    <div class="container-fluid">
        <a class="navbar-brand" href="#" id="repo-heading">
            <i class="fab fa-github"></i> <span id="repo-name">Loading...</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false"
            aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarContent">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <a class="nav-link" href="#" id="stars">
                        <i class="fas fa-star"></i> Stars: <span class="badge bg-warning text-dark">0</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" id="forks">
                        <i class="fas fa-code-branch"></i> Forks: <span class="badge bg-secondary">0</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" id="last-commit">
                        <i class="fas fa-clock"></i> Last Commit: <span class="badge bg-info">Loading...</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" id="workflow-status">
                        <i class="fas fa-tasks"></i> Workflow: <span class="badge bg-success">Loading...</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<script>
    const owner = 'rtk-rnjn';
    const repo = 'algorithms';

    async function fetchGitHubData() {
        try {
            const repoResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}`);
            const repoData = await repoResponse.json();

            const commitsResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/commits`);
            const commitsData = await commitsResponse.json();

            const workflowsResponse = await fetch(`https://api.github.com/repos/${owner}/${repo}/actions/runs`);
            const workflowsData = await workflowsResponse.json();

            document.getElementById('repo-name').textContent = repoData.full_name;
            document.getElementById('repo-heading').href = repoData.html_url;

            document.getElementById('stars').querySelector('.badge').textContent = repoData.stargazers_count;
            document.getElementById('stars').href = repoData.html_url;

            document.getElementById('forks').querySelector('.badge').textContent = repoData.forks_count;
            document.getElementById('forks').href = repoData.html_url;

            document.getElementById('last-commit').querySelector('.badge').textContent = new Date(commitsData[0].commit.author.date).toLocaleString();
            document.getElementById('last-commit').href = commitsData[0].html_url;

            const latestRun = workflowsData.workflow_runs[0];
            const workflowStatus = latestRun.status === 'completed' ? 'Success' : latestRun.status;
            document.getElementById('workflow-status').querySelector('.badge').textContent = workflowStatus;
            document.getElementById('workflow-status').href = latestRun.html_url;

            window.scroll({
                top: document.body.scrollHeight,
                behavior: 'smooth'
            });
        } catch (error) {
            console.error('Error fetching GitHub data:', error);
        }
    }

    fetchGitHubData();
</script>
{% endmacro %}